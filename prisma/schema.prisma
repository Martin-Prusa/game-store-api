generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  games         Game[]
  ratings       Rating[]
  GeneresOnGame GeneresOnGame[]
}

model Genre {
  id    String          @id @default(uuid())
  name  String          @unique
  games GeneresOnGame[]
}

model Game {
  id          String    @id @default(uuid())
  name        String
  description String?
  price       Float
  sale        Float?
  publisher   String?
  developer   String?
  releaseDate DateTime?

  assignedBy   User   @relation(fields: [assignedById], references: [id])
  assignedById String

  createdAt DateTime        @default(now())
  updatedAt DateTime        @default(now()) @updatedAt
  genres    GeneresOnGame[]
  ratings   Rating[]
}

model GeneresOnGame {
  game       Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId     String
  genre      Genre    @relation(fields: [genreId], references: [id])
  genreId    String
  assignedAt DateTime @default(now())

  assignedById String
  assignedBy   User   @relation(fields: [assignedById], references: [id])

  @@id([gameId, genreId])
}

model Rating {
  id      Int     @id @default(autoincrement())
  value   Int     @default(0)
  comment String?

  assignedBy   User   @relation(fields: [assignedById], references: [id])
  assignedById String

  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
